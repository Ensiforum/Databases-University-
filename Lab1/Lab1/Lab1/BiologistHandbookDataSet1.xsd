<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="BiologistHandbookDataSet1" targetNamespace="http://tempuri.org/BiologistHandbookDataSet1.xsd" xmlns:mstns="http://tempuri.org/BiologistHandbookDataSet1.xsd" xmlns="http://tempuri.org/BiologistHandbookDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="BiologistHandbookConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="BiologistHandbookConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Lab1.Properties.Settings.GlobalReference.Default.BiologistHandbookConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="domainsTableAdapter" GeneratorDataComponentClassName="domainsTableAdapter" Name="domains" UserDataComponentName="domainsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BiologistHandbookConnectionString1 (Settings)" DbObjectName="BiologistHandbook.dbo.domains" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[domains] WHERE (([domain_name] = @Original_domain_name) AND ([nucleus_presence] = @Original_nucleus_presence))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_domain_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="domain_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_nucleus_presence" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="nucleus_presence" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[domains] ([domain_name], [nucleus_presence]) VALUES (@domain_name, @nucleus_presence);
SELECT domain_name, nucleus_presence FROM domains WHERE (domain_name = @domain_name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@domain_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="domain_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@nucleus_presence" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="nucleus_presence" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT domain_name, nucleus_presence FROM dbo.domains</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[domains] SET [domain_name] = @domain_name, [nucleus_presence] = @nucleus_presence WHERE (([domain_name] = @Original_domain_name) AND ([nucleus_presence] = @Original_nucleus_presence));
SELECT domain_name, nucleus_presence FROM domains WHERE (domain_name = @domain_name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@domain_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="domain_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@nucleus_presence" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="nucleus_presence" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_domain_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="domain_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_nucleus_presence" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="nucleus_presence" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="domain_name" DataSetColumn="domain_name" />
              <Mapping SourceColumn="nucleus_presence" DataSetColumn="nucleus_presence" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="kingdomTableAdapter" GeneratorDataComponentClassName="kingdomTableAdapter" Name="kingdom" UserDataComponentName="kingdomTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BiologistHandbookConnectionString1 (Settings)" DbObjectName="BiologistHandbook.dbo.kingdom" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[kingdom] WHERE (([kingdom_name] = @Original_kingdom_name) AND ((@IsNull_domain_name = 1 AND [domain_name] IS NULL) OR ([domain_name] = @Original_domain_name)) AND ((@IsNull_fertilisation_types = 1 AND [fertilisation_types] IS NULL) OR ([fertilisation_types] = @Original_fertilisation_types)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_kingdom_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="kingdom_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_domain_name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="domain_name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_domain_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="domain_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_fertilisation_types" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="fertilisation_types" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_fertilisation_types" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="fertilisation_types" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[kingdom] ([kingdom_name], [domain_name], [fertilisation_types]) VALUES (@kingdom_name, @domain_name, @fertilisation_types);
SELECT kingdom_name, domain_name, fertilisation_types FROM kingdom WHERE (kingdom_name = @kingdom_name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@kingdom_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="kingdom_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@domain_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="domain_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@fertilisation_types" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="fertilisation_types" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT kingdom_name, domain_name, fertilisation_types FROM dbo.kingdom</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[kingdom] SET [kingdom_name] = @kingdom_name, [domain_name] = @domain_name, [fertilisation_types] = @fertilisation_types WHERE (([kingdom_name] = @Original_kingdom_name) AND ((@IsNull_domain_name = 1 AND [domain_name] IS NULL) OR ([domain_name] = @Original_domain_name)) AND ((@IsNull_fertilisation_types = 1 AND [fertilisation_types] IS NULL) OR ([fertilisation_types] = @Original_fertilisation_types)));
SELECT kingdom_name, domain_name, fertilisation_types FROM kingdom WHERE (kingdom_name = @kingdom_name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@kingdom_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="kingdom_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@domain_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="domain_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@fertilisation_types" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="fertilisation_types" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_kingdom_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="kingdom_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_domain_name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="domain_name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_domain_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="domain_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_fertilisation_types" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="fertilisation_types" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_fertilisation_types" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="fertilisation_types" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="kingdom_name" DataSetColumn="kingdom_name" />
              <Mapping SourceColumn="domain_name" DataSetColumn="domain_name" />
              <Mapping SourceColumn="fertilisation_types" DataSetColumn="fertilisation_types" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="phylumTableAdapter" GeneratorDataComponentClassName="phylumTableAdapter" Name="phylum" UserDataComponentName="phylumTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BiologistHandbookConnectionString1 (Settings)" DbObjectName="BiologistHandbook.dbo.phylum" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[phylum] WHERE (([phylum_name] = @Original_phylum_name) AND ((@IsNull_kingdom_name = 1 AND [kingdom_name] IS NULL) OR ([kingdom_name] = @Original_kingdom_name)) AND ([cellular_differentiation] = @Original_cellular_differentiation))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_phylum_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="phylum_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_kingdom_name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="kingdom_name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_kingdom_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="kingdom_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_cellular_differentiation" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="cellular_differentiation" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[phylum] ([phylum_name], [kingdom_name], [cellular_differentiation]) VALUES (@phylum_name, @kingdom_name, @cellular_differentiation);
SELECT phylum_name, kingdom_name, cellular_differentiation FROM phylum WHERE (phylum_name = @phylum_name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@phylum_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="phylum_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@kingdom_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="kingdom_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@cellular_differentiation" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="cellular_differentiation" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT phylum_name, kingdom_name, cellular_differentiation FROM dbo.phylum</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[phylum] SET [phylum_name] = @phylum_name, [kingdom_name] = @kingdom_name, [cellular_differentiation] = @cellular_differentiation WHERE (([phylum_name] = @Original_phylum_name) AND ((@IsNull_kingdom_name = 1 AND [kingdom_name] IS NULL) OR ([kingdom_name] = @Original_kingdom_name)) AND ([cellular_differentiation] = @Original_cellular_differentiation));
SELECT phylum_name, kingdom_name, cellular_differentiation FROM phylum WHERE (phylum_name = @phylum_name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@phylum_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="phylum_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@kingdom_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="kingdom_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@cellular_differentiation" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="cellular_differentiation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_phylum_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="phylum_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_kingdom_name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="kingdom_name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_kingdom_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="kingdom_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_cellular_differentiation" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="cellular_differentiation" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="phylum_name" DataSetColumn="phylum_name" />
              <Mapping SourceColumn="kingdom_name" DataSetColumn="kingdom_name" />
              <Mapping SourceColumn="cellular_differentiation" DataSetColumn="cellular_differentiation" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="BiologistHandbookDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="BiologistHandbookDataSet1" msprop:Generator_UserDSName="BiologistHandbookDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="domains" msprop:Generator_TableClassName="domainsDataTable" msprop:Generator_TableVarName="tabledomains" msprop:Generator_TablePropName="domains" msprop:Generator_RowDeletingName="domainsRowDeleting" msprop:Generator_RowChangingName="domainsRowChanging" msprop:Generator_RowEvHandlerName="domainsRowChangeEventHandler" msprop:Generator_RowDeletedName="domainsRowDeleted" msprop:Generator_UserTableName="domains" msprop:Generator_RowChangedName="domainsRowChanged" msprop:Generator_RowEvArgName="domainsRowChangeEvent" msprop:Generator_RowClassName="domainsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="domain_name" msprop:Generator_ColumnVarNameInTable="columndomain_name" msprop:Generator_ColumnPropNameInRow="domain_name" msprop:Generator_ColumnPropNameInTable="domain_nameColumn" msprop:Generator_UserColumnName="domain_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="nucleus_presence" msprop:Generator_ColumnVarNameInTable="columnnucleus_presence" msprop:Generator_ColumnPropNameInRow="nucleus_presence" msprop:Generator_ColumnPropNameInTable="nucleus_presenceColumn" msprop:Generator_UserColumnName="nucleus_presence" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="kingdom" msprop:Generator_TableClassName="kingdomDataTable" msprop:Generator_TableVarName="tablekingdom" msprop:Generator_TablePropName="kingdom" msprop:Generator_RowDeletingName="kingdomRowDeleting" msprop:Generator_RowChangingName="kingdomRowChanging" msprop:Generator_RowEvHandlerName="kingdomRowChangeEventHandler" msprop:Generator_RowDeletedName="kingdomRowDeleted" msprop:Generator_UserTableName="kingdom" msprop:Generator_RowChangedName="kingdomRowChanged" msprop:Generator_RowEvArgName="kingdomRowChangeEvent" msprop:Generator_RowClassName="kingdomRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="kingdom_name" msprop:Generator_ColumnVarNameInTable="columnkingdom_name" msprop:Generator_ColumnPropNameInRow="kingdom_name" msprop:Generator_ColumnPropNameInTable="kingdom_nameColumn" msprop:Generator_UserColumnName="kingdom_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="domain_name" msprop:Generator_ColumnVarNameInTable="columndomain_name" msprop:Generator_ColumnPropNameInRow="domain_name" msprop:Generator_ColumnPropNameInTable="domain_nameColumn" msprop:Generator_UserColumnName="domain_name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="fertilisation_types" msprop:Generator_ColumnVarNameInTable="columnfertilisation_types" msprop:Generator_ColumnPropNameInRow="fertilisation_types" msprop:Generator_ColumnPropNameInTable="fertilisation_typesColumn" msprop:Generator_UserColumnName="fertilisation_types" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="phylum" msprop:Generator_TableClassName="phylumDataTable" msprop:Generator_TableVarName="tablephylum" msprop:Generator_TablePropName="phylum" msprop:Generator_RowDeletingName="phylumRowDeleting" msprop:Generator_RowChangingName="phylumRowChanging" msprop:Generator_RowEvHandlerName="phylumRowChangeEventHandler" msprop:Generator_RowDeletedName="phylumRowDeleted" msprop:Generator_UserTableName="phylum" msprop:Generator_RowChangedName="phylumRowChanged" msprop:Generator_RowEvArgName="phylumRowChangeEvent" msprop:Generator_RowClassName="phylumRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="phylum_name" msprop:Generator_ColumnVarNameInTable="columnphylum_name" msprop:Generator_ColumnPropNameInRow="phylum_name" msprop:Generator_ColumnPropNameInTable="phylum_nameColumn" msprop:Generator_UserColumnName="phylum_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="kingdom_name" msprop:Generator_ColumnVarNameInTable="columnkingdom_name" msprop:Generator_ColumnPropNameInRow="kingdom_name" msprop:Generator_ColumnPropNameInTable="kingdom_nameColumn" msprop:Generator_UserColumnName="kingdom_name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="cellular_differentiation" msprop:Generator_ColumnVarNameInTable="columncellular_differentiation" msprop:Generator_ColumnPropNameInRow="cellular_differentiation" msprop:Generator_ColumnPropNameInTable="cellular_differentiationColumn" msprop:Generator_UserColumnName="cellular_differentiation" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:domains" />
      <xs:field xpath="mstns:domain_name" />
    </xs:unique>
    <xs:unique name="kingdom_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:kingdom" />
      <xs:field xpath="mstns:kingdom_name" />
    </xs:unique>
    <xs:unique name="phylum_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:phylum" />
      <xs:field xpath="mstns:phylum_name" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_kingdom_domains" msdata:parent="domains" msdata:child="kingdom" msdata:parentkey="domain_name" msdata:childkey="domain_name" msprop:Generator_UserChildTable="kingdom" msprop:Generator_ChildPropName="GetkingdomRows" msprop:Generator_UserRelationName="FK_kingdom_domains" msprop:Generator_ParentPropName="domainsRow" msprop:Generator_RelationVarName="relationFK_kingdom_domains" msprop:Generator_UserParentTable="domains" />
      <msdata:Relationship name="FK_phylum_kingdom" msdata:parent="kingdom" msdata:child="phylum" msdata:parentkey="kingdom_name" msdata:childkey="kingdom_name" msprop:Generator_UserChildTable="phylum" msprop:Generator_ChildPropName="GetphylumRows" msprop:Generator_UserRelationName="FK_phylum_kingdom" msprop:Generator_ParentPropName="kingdomRow" msprop:Generator_RelationVarName="relationFK_phylum_kingdom" msprop:Generator_UserParentTable="kingdom" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>